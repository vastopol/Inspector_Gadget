https://www.capstone-engine.org/lang_python.html

could also look at: pefile

capstone:

Import Python module capstone
Initialize Python class for Capstone with class "Cs"
Disassemble the binary code with method disasm() of the class Cs class instance

ex python 2.7

from capstone import *
CODE = b"\x55\x48\x8b\x05\xb8\x13\x00\x00"
md = Cs(CS_ARCH_X86, CS_MODE_64)
for i in md.disasm(CODE, 0x1000):
    print("0x%x:\t%s\t%s" %(i.address, i.mnemonic, i.op_str))


#----------------------------------------

compiler: 32 bit x86

gcc -m32 file.c
gcc -m32 -w -static file.c

it seems like in an elf file the executable code in in .text section

also if run strip on the binaries the output will be different

